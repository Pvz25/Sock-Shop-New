apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "2"
    meta.helm.sh/release-name: datadog-agent
    meta.helm.sh/release-namespace: datadog
  creationTimestamp: "2025-10-27T04:18:26Z"
  generation: 2
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: datadog-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: datadog-agent
    app.kubernetes.io/version: "7"
    helm.sh/chart: datadog-3.139.1
  name: datadog-agent
  namespace: datadog
  resourceVersion: "327503"
  uid: b61c0e30-4a58-4b24-a79e-55ceef6d0791
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: datadog-agent
  template:
    metadata:
      annotations:
        checksum/autoconf-config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
        checksum/checksd-config: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/clusteragent_token: 77d4e7d9c803feaf64f8a3762402ba45ec57faf0127baa197d22a9e0d65145bf
        checksum/confd-config: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/install_info: 3c832de44679d510344bb385f5522610aa991cb8066403ca3633a67f07e62fb4
      creationTimestamp: null
      labels:
        admission.datadoghq.com/enabled: "false"
        app: datadog-agent
        app.kubernetes.io/component: agent
        app.kubernetes.io/instance: datadog-agent
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: datadog-agent
      name: datadog-agent
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - command:
        - agent
        - run
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: datadog-secret
        - name: DD_REMOTE_CONFIGURATION_ENABLED
          value: "true"
        - name: DD_AUTH_TOKEN_FILE_PATH
          value: /etc/datadog-agent/auth/token
        - name: DD_CLUSTER_NAME
          value: sockshop-kind
        - name: KUBERNETES
          value: "yes"
        - name: DD_SITE
          value: us5.datadoghq.com
        - name: DD_CSI_ENABLED
          value: "false"
        - name: DD_LANGUAGE_DETECTION_ENABLED
          value: "false"
        - name: DD_LANGUAGE_DETECTION_REPORTING_ENABLED
          value: "false"
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: DD_KUBELET_TLS_VERIFY
          value: "false"
        - name: DD_KUBELET_USE_API_SERVER
          value: "true"
        - name: DD_OTLP_CONFIG_LOGS_ENABLED
          value: "false"
        - name: DD_PROCESS_CONFIG_PROCESS_COLLECTION_ENABLED
          value: "true"
        - name: DD_PROCESS_CONFIG_CONTAINER_COLLECTION_ENABLED
          value: "true"
        - name: DD_PROCESS_AGENT_DISCOVERY_ENABLED
          value: "true"
        - name: DD_STRIP_PROCESS_ARGS
          value: "false"
        - name: DD_PROCESS_CONFIG_RUN_IN_CORE_AGENT_ENABLED
          value: "true"
        - name: DD_LOG_LEVEL
          value: INFO
        - name: DD_DOGSTATSD_PORT
          value: "8125"
        - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
          value: "true"
        - name: DD_DOGSTATSD_TAG_CARDINALITY
          value: low
        - name: DD_DOGSTATSD_SOCKET
          value: /var/run/datadog/dsd.socket
        - name: DD_CLUSTER_AGENT_ENABLED
          value: "true"
        - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
          value: datadog-agent-cluster-agent
        - name: DD_CLUSTER_AGENT_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: datadog-agent-cluster-agent
        - name: DD_APM_ENABLED
          value: "true"
        - name: DD_APM_NON_LOCAL_TRAFFIC
          value: "true"
        - name: DD_APM_RECEIVER_PORT
          value: "8126"
        - name: DD_APM_RECEIVER_SOCKET
          value: /var/run/datadog/apm.socket
        - name: DD_INSTRUMENTATION_INSTALL_TIME
          valueFrom:
            configMapKeyRef:
              key: install_time
              name: datadog-agent-kpi-telemetry-configmap
        - name: DD_INSTRUMENTATION_INSTALL_ID
          valueFrom:
            configMapKeyRef:
              key: install_id
              name: datadog-agent-kpi-telemetry-configmap
        - name: DD_INSTRUMENTATION_INSTALL_TYPE
          valueFrom:
            configMapKeyRef:
              key: install_type
              name: datadog-agent-kpi-telemetry-configmap
        - name: DD_LOGS_ENABLED
          value: "true"
        - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
          value: "true"
        - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
          value: "true"
        - name: DD_LOGS_CONFIG_AUTO_MULTI_LINE_DETECTION
          value: "false"
        - name: DD_HEALTH_PORT
          value: "5555"
        - name: DD_EXTRA_CONFIG_PROVIDERS
          value: clusterchecks endpointschecks
        - name: DD_IGNORE_AUTOCONF
          value: kubernetes_state
        - name: DD_CONTAINER_LIFECYCLE_ENABLED
          value: "false"
        - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
          value: "true"
        - name: DD_EXPVAR_PORT
          value: "6000"
        - name: DD_COMPLIANCE_CONFIG_ENABLED
          value: "false"
        - name: DD_CONTAINER_IMAGE_ENABLED
          value: "false"
        - name: DD_KUBELET_CORE_CHECK_ENABLED
          value: "true"
        - name: DD_KUBERNETES_KUBELET_PODRESOURCES_SOCKET
          value: /var/lib/kubelet/pod-resources/kubelet.sock
        - name: DD_HOSTNAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: DD_COLLECT_KUBERNETES_EVENTS
          value: "true"
        - name: DD_KUBERNETES_COLLECT_METADATA_TAGS
          value: "true"
        image: gcr.io/datadoghq/agent:7.71.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /live
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        name: agent
        ports:
        - containerPort: 8125
          hostPort: 8125
          name: dogstatsdport
          protocol: UDP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /ready
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        startupProbe:
          failureThreshold: 6
          httpGet:
            path: /startup
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/log/datadog
          name: logdatadog
        - mountPath: /etc/datadog-agent/install_info
          name: installinfo
          readOnly: true
          subPath: install_info
        - mountPath: /tmp
          name: tmpdir
        - mountPath: /host/etc/os-release
          name: os-release-file
          readOnly: true
        - mountPath: /etc/datadog-agent
          name: config
        - mountPath: /etc/datadog-agent/auth
          name: auth-token
        - mountPath: /host/var/run
          mountPropagation: None
          name: runtimesocketdir
          readOnly: true
        - mountPath: /var/run/datadog
          name: dsdsocket
        - mountPath: /host/proc
          mountPropagation: None
          name: procdir
          readOnly: true
        - mountPath: /host/sys/fs/cgroup
          mountPropagation: None
          name: cgroups
          readOnly: true
        - mountPath: /etc/passwd
          name: passwd
          readOnly: true
        - mountPath: /opt/datadog-agent/run
          mountPropagation: None
          name: pointerdir
        - mountPath: /var/log/pods
          mountPropagation: None
          name: logpodpath
          readOnly: true
        - mountPath: /var/log/containers
          mountPropagation: None
          name: logscontainerspath
          readOnly: true
        - mountPath: /var/lib/docker/containers
          mountPropagation: None
          name: logdockercontainerpath
          readOnly: true
      - command:
        - trace-agent
        - -config=/etc/datadog-agent/datadog.yaml
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: datadog-secret
        - name: DD_REMOTE_CONFIGURATION_ENABLED
          value: "true"
        - name: DD_AUTH_TOKEN_FILE_PATH
          value: /etc/datadog-agent/auth/token
        - name: DD_CLUSTER_NAME
          value: sockshop-kind
        - name: KUBERNETES
          value: "yes"
        - name: DD_SITE
          value: us5.datadoghq.com
        - name: DD_CSI_ENABLED
          value: "false"
        - name: DD_LANGUAGE_DETECTION_ENABLED
          value: "false"
        - name: DD_LANGUAGE_DETECTION_REPORTING_ENABLED
          value: "false"
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: DD_KUBELET_TLS_VERIFY
          value: "false"
        - name: DD_KUBELET_USE_API_SERVER
          value: "true"
        - name: DD_OTLP_CONFIG_LOGS_ENABLED
          value: "false"
        - name: DD_CLUSTER_AGENT_ENABLED
          value: "true"
        - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
          value: datadog-agent-cluster-agent
        - name: DD_CLUSTER_AGENT_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: datadog-agent-cluster-agent
        - name: DD_LOG_LEVEL
          value: INFO
        - name: DD_APM_ENABLED
          value: "true"
        - name: DD_APM_NON_LOCAL_TRAFFIC
          value: "true"
        - name: DD_APM_RECEIVER_PORT
          value: "8126"
        - name: DD_APM_RECEIVER_SOCKET
          value: /var/run/datadog/apm.socket
        - name: DD_DOGSTATSD_SOCKET
          value: /var/run/datadog/dsd.socket
        - name: DD_INSTRUMENTATION_INSTALL_TIME
          valueFrom:
            configMapKeyRef:
              key: install_time
              name: datadog-agent-kpi-telemetry-configmap
        - name: DD_INSTRUMENTATION_INSTALL_ID
          valueFrom:
            configMapKeyRef:
              key: install_id
              name: datadog-agent-kpi-telemetry-configmap
        - name: DD_INSTRUMENTATION_INSTALL_TYPE
          valueFrom:
            configMapKeyRef:
              key: install_type
              name: datadog-agent-kpi-telemetry-configmap
        image: gcr.io/datadoghq/agent:7.71.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          tcpSocket:
            port: 8126
          timeoutSeconds: 5
        name: trace-agent
        ports:
        - containerPort: 8126
          name: traceport
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/datadog-agent
          name: config
          readOnly: true
        - mountPath: /var/log/datadog
          name: logdatadog
        - mountPath: /etc/datadog-agent/auth
          name: auth-token
          readOnly: true
        - mountPath: /host/proc
          mountPropagation: None
          name: procdir
          readOnly: true
        - mountPath: /host/sys/fs/cgroup
          mountPropagation: None
          name: cgroups
          readOnly: true
        - mountPath: /tmp
          name: tmpdir
        - mountPath: /var/run/datadog
          name: dsdsocket
        - mountPath: /host/var/run
          mountPropagation: None
          name: runtimesocketdir
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      initContainers:
      - args:
        - cp -r /etc/datadog-agent /opt
        command:
        - bash
        - -c
        image: gcr.io/datadoghq/agent:7.71.2
        imagePullPolicy: IfNotPresent
        name: init-volume
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/datadog-agent
          name: config
      - args:
        - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do
          bash $script ; done
        command:
        - bash
        - -c
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: datadog-secret
        - name: DD_REMOTE_CONFIGURATION_ENABLED
          value: "true"
        - name: DD_AUTH_TOKEN_FILE_PATH
          value: /etc/datadog-agent/auth/token
        - name: DD_CLUSTER_NAME
          value: sockshop-kind
        - name: KUBERNETES
          value: "yes"
        - name: DD_SITE
          value: us5.datadoghq.com
        - name: DD_CSI_ENABLED
          value: "false"
        - name: DD_LANGUAGE_DETECTION_ENABLED
          value: "false"
        - name: DD_LANGUAGE_DETECTION_REPORTING_ENABLED
          value: "false"
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: DD_KUBELET_TLS_VERIFY
          value: "false"
        - name: DD_KUBELET_USE_API_SERVER
          value: "true"
        - name: DD_OTLP_CONFIG_LOGS_ENABLED
          value: "false"
        image: gcr.io/datadoghq/agent:7.71.2
        imagePullPolicy: IfNotPresent
        name: init-config
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/datadog-agent
          name: config
        - mountPath: /var/log/datadog
          name: logdatadog
        - mountPath: /host/proc
          mountPropagation: None
          name: procdir
          readOnly: true
        - mountPath: /host/var/run
          mountPropagation: None
          name: runtimesocketdir
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 0
      serviceAccount: datadog-agent
      serviceAccountName: datadog-agent
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - emptyDir: {}
        name: auth-token
      - configMap:
          defaultMode: 420
          name: datadog-agent-installinfo
        name: installinfo
      - emptyDir: {}
        name: config
      - emptyDir: {}
        name: logdatadog
      - emptyDir: {}
        name: tmpdir
      - emptyDir: {}
        name: s6-run
      - hostPath:
          path: /proc
          type: ""
        name: procdir
      - hostPath:
          path: /sys/fs/cgroup
          type: ""
        name: cgroups
      - hostPath:
          path: /etc/os-release
          type: ""
        name: os-release-file
      - hostPath:
          path: /var/run/datadog
          type: DirectoryOrCreate
        name: dsdsocket
      - hostPath:
          path: /var/run/datadog
          type: DirectoryOrCreate
        name: apmsocket
      - hostPath:
          path: /etc/passwd
          type: ""
        name: passwd
      - hostPath:
          path: /var/run
          type: ""
        name: runtimesocketdir
      - hostPath:
          path: /var/lib/datadog-agent/logs
          type: ""
        name: pointerdir
      - hostPath:
          path: /var/log/pods
          type: ""
        name: logpodpath
      - hostPath:
          path: /var/log/containers
          type: ""
        name: logscontainerspath
      - hostPath:
          path: /var/lib/docker/containers
          type: ""
        name: logdockercontainerpath
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 10%
    type: RollingUpdate
status:
  currentNumberScheduled: 2
  desiredNumberScheduled: 2
  numberAvailable: 2
  numberMisscheduled: 0
  numberReady: 2
  observedGeneration: 2
  updatedNumberScheduled: 2
